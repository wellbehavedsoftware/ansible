# usage: source ./hacking/env-setup [-q]
#    modifies environment for running Ansible from checkout

# Default values for shell variables we use
PYTHONPATH=${PYTHONPATH-""}
PATH=${PATH-""}
MANPATH=${MANPATH-""}
VERBOSITY=${1-""}

# When run using source as directed, $0 gets set to bash, so we must use $BASH_SOURCE
if [ -n "$BASH_SOURCE" ] ; then
    HACKING_DIR=$(dirname "$BASH_SOURCE")
elif [ $(basename "$0") = "env-setup" ]; then
    HACKING_DIR=$(dirname "$0")
else
    HACKING_DIR="$PWD/hacking"
fi
# The below is an alternative to readlink -fn which doesn't exist on OS X
# Source: http://stackoverflow.com/a/1678636
FULL_PATH=$(python -c "import os; print(os.path.realpath('$HACKING_DIR'))")
ANSIBLE_HOME=$(dirname "$FULL_PATH")

PREFIX_PYTHONPATH="$ANSIBLE_HOME"
PREFIX_PATH="$ANSIBLE_HOME/bin"
PREFIX_MANPATH="$ANSIBLE_HOME/docs/man"

expr "$PYTHONPATH" : "${PREFIX_PYTHONPATH}.*" > /dev/null || export PYTHONPATH="$PREFIX_PYTHONPATH:$PYTHONPATH"
expr "$PATH" : "${PREFIX_PATH}.*" > /dev/null || export PATH="$PREFIX_PATH:$PATH"
expr "$MANPATH" : "${PREFIX_MANPATH}.*" > /dev/null || export MANPATH="$PREFIX_MANPATH:$MANPATH"

#
# Generate egg_info so that pkg_resources works
#

# Do the work in a function so we don't repeat ourselves later
gen_egg_info()
{
    python setup.py egg_info
    if [ -e "$PREFIX_PYTHONPATH/ansible*.egg-info" ] ; then
        rm -r "$PREFIX_PYTHONPATH/ansible*.egg-info"
    fi
    mv "ansible*.egg-info" "$PREFIX_PYTHONPATH"
}

if [ "$ANSIBLE_HOME" != "$PWD" ] ; then
    current_dir="$PWD"
else
    current_dir="$ANSIBLE_HOME"
fi
cd "$ANSIBLE_HOME"
#if [ "$VERBOSITY" = "-q" ] ; then
#    gen_egg_info 2>1 1> /dev/null
#else
#    gen_egg_info
#fi
cd "$current_dir"

#
# Print out values unless -q is set
#

if [ "$VERBOSITY" != "-q" ] ; then
    echo ""
    echo "Setting up Ansible to run out of checkout..."
    echo ""
    echo "PATH=$PATH"
    echo "PYTHONPATH=$PYTHONPATH"
    echo "MANPATH=$MANPATH"
    echo ""

    echo "Remember, you may wish to specify your host file with -i"
    echo ""
    echo "Done!"
    echo ""
fi

